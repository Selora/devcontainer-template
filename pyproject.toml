[project]
name = "devcontainer-test"
version = "0.1.0"
description = "Showcase devcontainers with a small python app"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
  "asyncpg>=0.30.0",
  "fastapi>=0.115.8",
  "rust-just>=1.39.0",
  "sqlalchemy>=2.0.38",
  "uvicorn>=0.34.0",
]
license = "MIT"

[dependency-groups]
dev = ["basedpyright>=1.27.1", "pre-commit>=4.1.0", "ruff>=0.9.7"]

[tool.basedpyright]
# Configure the LSP
# See [here](https://docs.basedpyright.com/v1.20.0/configuration/config-files/#sample-pyprojecttoml-file)
include = ["src", "main.py"]
exclude = [
  "**/node_modules",
  "**/__pycache__",
  "src/experimental",
  "src/typestubs",
]

#ignore = ["src/oldstuff"]
defineConstant = { DEBUG = true }
stubPath = "src/stubs"

reportMissingImports = "error"
reportMissingTypeStubs = false

pythonVersion = "3.13"
pythonPlatform = "Linux"

# executionEnvironments = [
#   { root = "src/web", pythonVersion = "3.5", pythonPlatform = "Windows", extraPaths = [ "src/service_libs" ], reportMissingImports = "warning" },
#   { root = "src/sdk", pythonVersion = "3.0", extraPaths = [ "src/backend" ] },
#   { root = "src/tests", reportPrivateUsage = false, extraPaths = ["src/tests/e2e", "src/sdk" ]},
#   { root = "src" }
# ]

[tool.ruff]
target-version = "py313"

[tool.ruff.lint]
# Configure the liner + formatter
# See [here](https://docs.astral.sh/ruff/configuration/)

# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
